# This workflow will build a Java project with Maven
# For more information see: https://aberger.at/blog/2021/05/29/cloud-startproject.html

name: build and deploy

on:
  push:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      debug:
        description: enable tmate console debugging     
        required: false
        default: "disabled"
       
env:
  REGISTRY: ghcr.io
  DISTRIBUTION_FOLDER: target/distribution/docker
  GRAAL_VM_URL: https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.3.0/graalvm-ce-java11-linux-amd64-21.3.0.tar.gz

jobs:
  server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - uses: actions/checkout@v2

    - name: cache maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-build-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-m2-
    - name: install graal vm
      run: |
        pwd
        ls -ld .
        curl --location --output graalvm.tgz ${{ env.GRAAL_VM_URL }}
        ls -l
        tar -xzf graalvm.tgz
        mv graalvm-* graalvm
        export GRAALVM_HOME=/opt/graalvm
        export PATH=$GRAALVM_HOME/bin:$PATH
        gu install native-image
        echo "GRAALVM_HOME=/opt/graalvm" >> $GITHUB_ENV
      working-directory: /opt

    - name: build supersonic native quarkus application
      run: |
        echo "graal home is $GRAALVM_HOME"
        mvn -Pnative -Dquarkus-profile=prod -Dbase.href="/" -B package
    - name: build server docker image
      run: |
        docker build server --tag ${{ env.REGISTRY }}/${{ github.repository }}-server
      working-directory: distribution/${{ env.DISTRIBUTION_FOLDER }}        
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.REGISTRY_ACCESS_TOKEN }}
    - name: push server docker image
      run: |
        docker push ${{ env.REGISTRY }}/${{ github.repository }}-server
      working-directory: distribution/${{ env.DISTRIBUTION_FOLDER }}        
